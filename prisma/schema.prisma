// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String        @id @default(uuid())
  email          String        @unique
  password       String
  name           String
  nickname       String?
  birth_date     DateTime?
  current_weight Float?
  height         Float?
  image_URL      String?
  progress       UserProgress?
  created_at     DateTime

  plan    Plan?   @relation(fields: [plan_id], references: [id], onDelete: Cascade)
  plan_id String?

  LuckyNumbers LuckyNumbers[]
  PrizeDraw    PrizeDraw[]

  @@map("users")
}

model UserProgress {
  id               String     @id @default(uuid())
  initial_weight   Float?
  next_workout     String?
  last_workout     String?
  ia_analyses      String?
  ia_analyses_date DateTime?
  current_goal     String?
  streaks          DateTime[]

  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String @unique

  UserEquipmentTracking UserEquipmentTracking[]

  @@map("user_progress")
}

model UserEquipmentTracking {
  id          String    @id @default(uuid())
  weight      Int
  last_update DateTime?

  userProgress     UserProgress @relation(fields: [user_progress_id], references: [id], onDelete: Cascade)
  user_progress_id String       @unique

  gymEquipament     GymEquipament @relation(fields: [gym_equipament_id], references: [id], onDelete: Cascade)
  gym_equipament_id String        @unique

  @@map("user_equipment_tracking")
}

model Bill {
  id         String   @id @default(uuid())
  name       String
  category   String
  amount     Decimal
  created_at DateTime @default(now())

  @@map("bills")
}

model Plan {
  id              String   @id @default(uuid())
  name            String   @unique
  price           Decimal
  experience_date DateTime
  created_at      DateTime @default(now())

  User User[]

  @@map("plans")
}

model GymEquipament {
  id               String   @id @default(uuid())
  name             String
  category         String
  sets             Int
  reps             Int
  cod              String
  status           String
  last_maintenance DateTime

  UserEquipmentTracking UserEquipmentTracking[]

  @@map("gym_equipaments")
}

model PrizeDraw {
  id           String    @id @default(uuid())
  prize        String
  drawn_number String
  status       String
  created_at   DateTime  @default(now())
  finished_at  DateTime?

  user      User?   @relation(fields: [winner_id], references: [id], onDelete: Cascade)
  winner_id String?

  @@map("prize_draws")
}

model LuckyNumbers {
  id            String   @id @default(uuid())
  lucky_numbers String[]
  last_update   DateTime

  user    User   @relation(fields: [user_id], references: [id])
  user_id String @unique

  @@map("lucky_numbers")
}
